{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Mechanics \u2013 Problem 1 Investigating the Range as a Function of the Angle of Projection Motivation Projectile motion demonstrates key physical principles through accessible equations. The relationship between range and angle is non-linear and sensitive to parameters like initial speed and gravity. By exploring this systematically, we uncover how small changes in initial conditions can drastically alter outcomes. Theoretical Foundation From Newton\u2019s second law, the motion of a projectile (ignoring air resistance) is governed by: Equations of motion: \\[ x(t) = v_0 \\cos(\\theta) t \\quad\\text{and}\\quad y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2}gt^2 \\] Set \\(y(t) = 0\\) to find time of flight (assuming launch and landing heights are equal): \\[ 0 = v_0 \\sin(\\theta) t - \\frac{1}{2}gt^2 \\Rightarrow t = \\frac{2v_0 \\sin(\\theta)}{g} \\] Substitute into \\(x(t)\\) to get the range : \\[ R = v_0 \\cos(\\theta) \\cdot \\frac{2v_0 \\sin(\\theta)}{g} = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] This shows that the range depends on \\(\\sin(2\\theta)\\) , reaching a maximum at \\(\\theta = 45^\\circ\\) . Analysis of the Range For fixed \\(v_0\\) and \\(g\\) , \\(R(\\theta)\\) is symmetric around \\(45^\\circ\\) . Increasing \\(v_0\\) quadratically increases range. Higher gravity shortens the range. Practical Applications Sports : Optimizing the angle for maximum distance in javelin or football. Military : Calculating artillery firing angles. Engineering : Launch dynamics of rockets or drones. Limitations and Extensions Air resistance reduces range and shifts the optimal angle < 45\u00b0. Uneven terrain changes the final height, requiring a modified trajectory equation. Wind introduces lateral and vertical forces that must be modeled with differential equations. 3D Simulation This document provides a theoretical foundation, computational implementation, and practical insights into projectile motion.","title":"Mechanics \u2013 Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#mechanics-problem-1","text":"","title":"Mechanics \u2013 Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motivation","text":"Projectile motion demonstrates key physical principles through accessible equations. The relationship between range and angle is non-linear and sensitive to parameters like initial speed and gravity. By exploring this systematically, we uncover how small changes in initial conditions can drastically alter outcomes.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theoretical-foundation","text":"From Newton\u2019s second law, the motion of a projectile (ignoring air resistance) is governed by: Equations of motion: \\[ x(t) = v_0 \\cos(\\theta) t \\quad\\text{and}\\quad y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2}gt^2 \\] Set \\(y(t) = 0\\) to find time of flight (assuming launch and landing heights are equal): \\[ 0 = v_0 \\sin(\\theta) t - \\frac{1}{2}gt^2 \\Rightarrow t = \\frac{2v_0 \\sin(\\theta)}{g} \\] Substitute into \\(x(t)\\) to get the range : \\[ R = v_0 \\cos(\\theta) \\cdot \\frac{2v_0 \\sin(\\theta)}{g} = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] This shows that the range depends on \\(\\sin(2\\theta)\\) , reaching a maximum at \\(\\theta = 45^\\circ\\) .","title":"Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#analysis-of-the-range","text":"For fixed \\(v_0\\) and \\(g\\) , \\(R(\\theta)\\) is symmetric around \\(45^\\circ\\) . Increasing \\(v_0\\) quadratically increases range. Higher gravity shortens the range.","title":"Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#practical-applications","text":"Sports : Optimizing the angle for maximum distance in javelin or football. Military : Calculating artillery firing angles. Engineering : Launch dynamics of rockets or drones.","title":"Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#limitations-and-extensions","text":"Air resistance reduces range and shifts the optimal angle < 45\u00b0. Uneven terrain changes the final height, requiring a modified trajectory equation. Wind introduces lateral and vertical forces that must be modeled with differential equations. 3D Simulation This document provides a theoretical foundation, computational implementation, and practical insights into projectile motion.","title":"Limitations and Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Investigating the Dynamics of a Forced Damped Pendulum Theoretical Foundations of the Forced Damped Pendulum The motion of a forced damped pendulum is governed by a second-order nonlinear differential equation that incorporates inertia , damping , restoring force , and external driving force : \\(\\frac{d^2\\theta}{dt^2} + \\beta \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin\\theta = \\frac{A}{mL^2} \\cos(\\omega t)\\) where: - \\(\\theta\\) = Angular displacement (radians) - \\(\\frac{d^2\\theta}{dt^2}\\) = Angular acceleration - \\(\\frac{d\\theta}{dt}\\) = Angular velocity - \\(\\beta\\) = Damping coefficient (s \\(^{-1}\\) ) - \\(g\\) = Acceleration due to gravity (9.81 m/s\u00b2) - \\(L\\) = Length of the pendulum (m) - \\(A\\) = Amplitude of the external driving torque (N\u00b7m) - \\(m\\) = Mass of the pendulum bob (kg) - \\(\\omega\\) = Angular frequency of the driving force (rad/s) - \\(t\\) = Time (s) Dimensionless Form of the Equation To simplify the analysis, we introduce dimensionless variables : \\(\\tau = \\sqrt{\\frac{g}{L}} t, \\quad Q = \\frac{\\beta}{\\sqrt{\\frac{g}{L}}}, \\quad F = \\frac{A}{mL^2 \\sqrt{\\frac{g}{L}}}, \\quad \\Omega = \\frac{\\omega}{\\sqrt{\\frac{g}{L}}}\\) Thus, the equation becomes: \\(\\frac{d^2\\theta}{d\\tau^2} + Q \\frac{d\\theta}{d\\tau} + \\sin\\theta = F \\cos(\\Omega \\tau)\\) Key Calculations and Numerical Examples 1. Natural Frequency of an Undamped Pendulum For a simple pendulum without damping ( \\(\\beta = 0\\) ) and no driving force ( \\(A = 0\\) ), the equation simplifies to: \\(\\frac{d^2\\theta}{dt^2} + \\frac{g}{L} \\sin\\theta = 0\\) For small angles ( \\(\\sin\\theta \\approx \\theta\\) ), this reduces to: \\(\\frac{d^2\\theta}{dt^2} + \\omega_0^2 \\theta = 0\\) where: \\(\\omega_0 = \\sqrt{\\frac{g}{L}}\\) is the natural frequency of the pendulum. The solution is: \\(\\theta(t) = \\theta_0 \\cos(\\omega_0 t + \\phi)\\) Example Calculation: If \\(L = 1\\) m, then: \\(\\omega_0 = \\sqrt{\\frac{9.81}{1}} = 3.13 \\text{ rad/s}\\) The period is: \\(T = \\frac{2\\pi}{\\omega_0} = \\frac{2\\pi}{3.13} \\approx 2.01 \\text{ s}\\) 3. Steady-State Solution with External Forcing For a forced pendulum ( \\(A \\neq 0\\) ), the steady-state solution can be found using: \\(\\theta_{\\text{steady}}(t) = \\theta_{\\text{particular}}(t) + \\theta_{\\text{transient}}(t)\\) where: \\(\\theta_{\\text{particular}}(t) = \\frac{F}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (\\beta \\omega)^2}} \\cos(\\omega t - \\delta)\\) \\(\\tan\\delta = \\frac{\\beta \\omega}{\\omega_0^2 - \\omega^2}\\) Thus, the steady-state response is: \\(\\theta_{\\text{steady}}(t) = 0.14 \\cos(2.5t - 35.3^\\circ)\\) Practical Applications Understanding the dynamics of forced damped pendulums is crucial in various fields: Engineering: Mechanical systems with oscillatory components, such as suspension bridges or clock mechanisms, can experience resonant vibrations leading to structural failures if not properly damped. Robotics: The principles governing pendulum dynamics assist in designing stable walking robots and understanding bipedal locomotion. Seismology: Modeling the Earth's response to periodic forces, such as tidal effects, benefits from insights into forced oscillatory systems. Implementation","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#investigating-the-dynamics-of-a-forced-damped-pendulum","text":"","title":"Investigating the Dynamics of a Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#theoretical-foundations-of-the-forced-damped-pendulum","text":"The motion of a forced damped pendulum is governed by a second-order nonlinear differential equation that incorporates inertia , damping , restoring force , and external driving force : \\(\\frac{d^2\\theta}{dt^2} + \\beta \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin\\theta = \\frac{A}{mL^2} \\cos(\\omega t)\\) where: - \\(\\theta\\) = Angular displacement (radians) - \\(\\frac{d^2\\theta}{dt^2}\\) = Angular acceleration - \\(\\frac{d\\theta}{dt}\\) = Angular velocity - \\(\\beta\\) = Damping coefficient (s \\(^{-1}\\) ) - \\(g\\) = Acceleration due to gravity (9.81 m/s\u00b2) - \\(L\\) = Length of the pendulum (m) - \\(A\\) = Amplitude of the external driving torque (N\u00b7m) - \\(m\\) = Mass of the pendulum bob (kg) - \\(\\omega\\) = Angular frequency of the driving force (rad/s) - \\(t\\) = Time (s)","title":"Theoretical Foundations of the Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#dimensionless-form-of-the-equation","text":"To simplify the analysis, we introduce dimensionless variables : \\(\\tau = \\sqrt{\\frac{g}{L}} t, \\quad Q = \\frac{\\beta}{\\sqrt{\\frac{g}{L}}}, \\quad F = \\frac{A}{mL^2 \\sqrt{\\frac{g}{L}}}, \\quad \\Omega = \\frac{\\omega}{\\sqrt{\\frac{g}{L}}}\\) Thus, the equation becomes: \\(\\frac{d^2\\theta}{d\\tau^2} + Q \\frac{d\\theta}{d\\tau} + \\sin\\theta = F \\cos(\\Omega \\tau)\\)","title":"Dimensionless Form of the Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#key-calculations-and-numerical-examples","text":"","title":"Key Calculations and Numerical Examples"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-natural-frequency-of-an-undamped-pendulum","text":"For a simple pendulum without damping ( \\(\\beta = 0\\) ) and no driving force ( \\(A = 0\\) ), the equation simplifies to: \\(\\frac{d^2\\theta}{dt^2} + \\frac{g}{L} \\sin\\theta = 0\\) For small angles ( \\(\\sin\\theta \\approx \\theta\\) ), this reduces to: \\(\\frac{d^2\\theta}{dt^2} + \\omega_0^2 \\theta = 0\\) where: \\(\\omega_0 = \\sqrt{\\frac{g}{L}}\\) is the natural frequency of the pendulum. The solution is: \\(\\theta(t) = \\theta_0 \\cos(\\omega_0 t + \\phi)\\) Example Calculation: If \\(L = 1\\) m, then: \\(\\omega_0 = \\sqrt{\\frac{9.81}{1}} = 3.13 \\text{ rad/s}\\) The period is: \\(T = \\frac{2\\pi}{\\omega_0} = \\frac{2\\pi}{3.13} \\approx 2.01 \\text{ s}\\)","title":"1. Natural Frequency of an Undamped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-steady-state-solution-with-external-forcing","text":"For a forced pendulum ( \\(A \\neq 0\\) ), the steady-state solution can be found using: \\(\\theta_{\\text{steady}}(t) = \\theta_{\\text{particular}}(t) + \\theta_{\\text{transient}}(t)\\) where: \\(\\theta_{\\text{particular}}(t) = \\frac{F}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (\\beta \\omega)^2}} \\cos(\\omega t - \\delta)\\) \\(\\tan\\delta = \\frac{\\beta \\omega}{\\omega_0^2 - \\omega^2}\\) Thus, the steady-state response is: \\(\\theta_{\\text{steady}}(t) = 0.14 \\cos(2.5t - 35.3^\\circ)\\)","title":"3. Steady-State Solution with External Forcing"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#practical-applications","text":"Understanding the dynamics of forced damped pendulums is crucial in various fields: Engineering: Mechanical systems with oscillatory components, such as suspension bridges or clock mechanisms, can experience resonant vibrations leading to structural failures if not properly damped. Robotics: The principles governing pendulum dynamics assist in designing stable walking robots and understanding bipedal locomotion. Seismology: Modeling the Earth's response to periodic forces, such as tidal effects, benefits from insights into forced oscillatory systems.","title":"Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#implementation","text":"","title":"Implementation"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 Orbital Period and Orbital Radius Introduction Orbital motion is governed by Newton\u2019s laws of motion and the universal law of gravitation. A satellite, planet, or any celestial body orbiting another massive object follows a predictable path, determined by the balance between gravitational attraction and the object's inertia. Two key parameters define an orbit: Orbital Radius ( \\(r\\) ) : The distance from the center of the central mass (e.g., the Earth or the Sun) to the orbiting object. Orbital Period ( \\(T\\) ) : The time required for the object to complete one full revolution around the central body. For a stable orbit, the gravitational force must act as the centripetal force that keeps the object in circular motion. Theory The gravitational force between two masses \\(M\\) (central body) and \\(m\\) (orbiting body) is given by Newton\u2019s Law of Universal Gravitation: \\(F_g = \\frac{GMm}{r^2}\\) For an object in a circular orbit, the required centripetal force is: \\(F_c = \\frac{m v^2}{r}\\) Since gravity provides the necessary centripetal force, we set these two forces equal to each other: \\(\\frac{GMm}{r^2} = \\frac{m v^2}{r}\\) Canceling \\(m\\) and solving for orbital velocity \\(v\\) : \\(v = \\sqrt{\\frac{GM}{r}}\\) Since orbital period \\(T\\) is the time taken to complete one full orbit, we use the relationship between velocity, circumference, and time: \\(T = \\frac{2\\pi r}{v}\\) Substituting \\(v\\) : \\(T = 2\\pi \\sqrt{\\frac{r^3}{GM}}\\) Key Observations: The orbital period increases with the cube root of the orbital radius. This is a direct consequence of Kepler\u2019s Third Law , which states: \\(T^2 \\propto r^3\\) The larger the central mass \\(M\\) , the stronger the gravitational pull, leading to shorter orbital periods for a given radius. Satellites closer to the Earth orbit faster than those farther away, explaining why the International Space Station (ISS) orbits in about 90 minutes , while the Moon takes 27.3 days . Example Problem Problem Statement: A satellite is launched into a circular orbit 500 km above Earth's surface . Determine its orbital period. Given Data: Mass of Earth: \\(M = 5.972 \\times 10^{24}\\) kg Radius of Earth: \\(R_E = 6.371 \\times 10^6\\) m Altitude of the satellite: \\(h = 500 \\times 10^3\\) m Gravitational constant: \\(G = 6.674 \\times 10^{-11}\\) Nm\u00b2/kg\u00b2 Step 1: Calculate Orbital Radius The orbital radius is the sum of Earth\u2019s radius and the satellite\u2019s altitude: \\(r = R_E + h = (6.371 \\times 10^6) + (500 \\times 10^3)\\) \\(r = 6.871 \\times 10^6 \\text{ m}\\) Step 2: Apply the Orbital Period Formula \\(T = 2\\pi \\sqrt{\\frac{r^3}{GM}}\\) Substituting values: \\(T = 2\\pi \\sqrt{\\frac{(6.871 \\times 10^6)^3}{(6.674 \\times 10^{-11}) (5.972 \\times 10^{24})}}\\) \\(T \\approx 5674 \\text{ s} \\approx 94.6 \\text{ min}\\) Step 3: Interpretation The satellite completes one orbit in approximately 94.6 minutes . This means an observer on Earth would see the satellite pass overhead multiple times per day. Lower-altitude satellites orbit faster due to stronger gravitational pull, while higher-altitude satellites (e.g., geostationary satellites at 35,786 km ) have much longer periods, often 24 hours . Applications and Real-World Importance 1. Satellites and Space Missions The orbital period determines how often communication satellites pass over a given location. Geostationary satellites are positioned at a specific orbital radius so that their period matches Earth\u2019s rotation (24 hours), keeping them fixed relative to the ground. 2. Planetary Orbits Kepler\u2019s Laws allow astronomers to determine the distances and periods of planets in our Solar System. For example, Earth\u2019s orbital radius around the Sun is 1 AU \\((1.496 \\times 10^{11}\\) m), giving it a 365.25-day period . 3. Space Travel and Orbital Transfers Understanding orbital mechanics is crucial for launching satellites, planning space missions, and docking with the ISS. The Hohmann Transfer Orbit method is used to move satellites between different orbits using minimal fuel. Conclusion The relationship between orbital period and radius is fundamental in astrophysics and engineering. The \\(T = 2\\pi \\sqrt{r^3/GM}\\) equation helps predict how celestial bodies and artificial satellites move in space. Implementation Simulation model motion of orbital period","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-period-and-orbital-radius","text":"","title":"Orbital Period and Orbital Radius"},{"location":"1%20Physics/2%20Gravity/Problem_1/#introduction","text":"Orbital motion is governed by Newton\u2019s laws of motion and the universal law of gravitation. A satellite, planet, or any celestial body orbiting another massive object follows a predictable path, determined by the balance between gravitational attraction and the object's inertia. Two key parameters define an orbit: Orbital Radius ( \\(r\\) ) : The distance from the center of the central mass (e.g., the Earth or the Sun) to the orbiting object. Orbital Period ( \\(T\\) ) : The time required for the object to complete one full revolution around the central body. For a stable orbit, the gravitational force must act as the centripetal force that keeps the object in circular motion.","title":"Introduction"},{"location":"1%20Physics/2%20Gravity/Problem_1/#theory","text":"The gravitational force between two masses \\(M\\) (central body) and \\(m\\) (orbiting body) is given by Newton\u2019s Law of Universal Gravitation: \\(F_g = \\frac{GMm}{r^2}\\) For an object in a circular orbit, the required centripetal force is: \\(F_c = \\frac{m v^2}{r}\\) Since gravity provides the necessary centripetal force, we set these two forces equal to each other: \\(\\frac{GMm}{r^2} = \\frac{m v^2}{r}\\) Canceling \\(m\\) and solving for orbital velocity \\(v\\) : \\(v = \\sqrt{\\frac{GM}{r}}\\) Since orbital period \\(T\\) is the time taken to complete one full orbit, we use the relationship between velocity, circumference, and time: \\(T = \\frac{2\\pi r}{v}\\) Substituting \\(v\\) : \\(T = 2\\pi \\sqrt{\\frac{r^3}{GM}}\\)","title":"Theory"},{"location":"1%20Physics/2%20Gravity/Problem_1/#key-observations","text":"The orbital period increases with the cube root of the orbital radius. This is a direct consequence of Kepler\u2019s Third Law , which states: \\(T^2 \\propto r^3\\) The larger the central mass \\(M\\) , the stronger the gravitational pull, leading to shorter orbital periods for a given radius. Satellites closer to the Earth orbit faster than those farther away, explaining why the International Space Station (ISS) orbits in about 90 minutes , while the Moon takes 27.3 days .","title":"Key Observations:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#example-problem","text":"","title":"Example Problem"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-statement","text":"A satellite is launched into a circular orbit 500 km above Earth's surface . Determine its orbital period.","title":"Problem Statement:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#given-data","text":"Mass of Earth: \\(M = 5.972 \\times 10^{24}\\) kg Radius of Earth: \\(R_E = 6.371 \\times 10^6\\) m Altitude of the satellite: \\(h = 500 \\times 10^3\\) m Gravitational constant: \\(G = 6.674 \\times 10^{-11}\\) Nm\u00b2/kg\u00b2","title":"Given Data:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#step-1-calculate-orbital-radius","text":"The orbital radius is the sum of Earth\u2019s radius and the satellite\u2019s altitude: \\(r = R_E + h = (6.371 \\times 10^6) + (500 \\times 10^3)\\) \\(r = 6.871 \\times 10^6 \\text{ m}\\)","title":"Step 1: Calculate Orbital Radius"},{"location":"1%20Physics/2%20Gravity/Problem_1/#step-2-apply-the-orbital-period-formula","text":"\\(T = 2\\pi \\sqrt{\\frac{r^3}{GM}}\\) Substituting values: \\(T = 2\\pi \\sqrt{\\frac{(6.871 \\times 10^6)^3}{(6.674 \\times 10^{-11}) (5.972 \\times 10^{24})}}\\) \\(T \\approx 5674 \\text{ s} \\approx 94.6 \\text{ min}\\)","title":"Step 2: Apply the Orbital Period Formula"},{"location":"1%20Physics/2%20Gravity/Problem_1/#step-3-interpretation","text":"The satellite completes one orbit in approximately 94.6 minutes . This means an observer on Earth would see the satellite pass overhead multiple times per day. Lower-altitude satellites orbit faster due to stronger gravitational pull, while higher-altitude satellites (e.g., geostationary satellites at 35,786 km ) have much longer periods, often 24 hours .","title":"Step 3: Interpretation"},{"location":"1%20Physics/2%20Gravity/Problem_1/#applications-and-real-world-importance","text":"","title":"Applications and Real-World Importance"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-satellites-and-space-missions","text":"The orbital period determines how often communication satellites pass over a given location. Geostationary satellites are positioned at a specific orbital radius so that their period matches Earth\u2019s rotation (24 hours), keeping them fixed relative to the ground.","title":"1. Satellites and Space Missions"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-planetary-orbits","text":"Kepler\u2019s Laws allow astronomers to determine the distances and periods of planets in our Solar System. For example, Earth\u2019s orbital radius around the Sun is 1 AU \\((1.496 \\times 10^{11}\\) m), giving it a 365.25-day period .","title":"2. Planetary Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-space-travel-and-orbital-transfers","text":"Understanding orbital mechanics is crucial for launching satellites, planning space missions, and docking with the ISS. The Hohmann Transfer Orbit method is used to move satellites between different orbits using minimal fuel.","title":"3. Space Travel and Orbital Transfers"},{"location":"1%20Physics/2%20Gravity/Problem_1/#conclusion","text":"The relationship between orbital period and radius is fundamental in astrophysics and engineering. The \\(T = 2\\pi \\sqrt{r^3/GM}\\) equation helps predict how celestial bodies and artificial satellites move in space.","title":"Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_1/#implementation","text":"Simulation model motion of orbital period","title":"Implementation"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2: Escape Velocities and Cosmic Velocities Motivation Escape velocity represents the minimum speed an object must attain to break free from a celestial body's gravitational pull without further propulsion. This idea scales up through the concept of cosmic velocities , which are key to understanding artificial satellites, interplanetary travel, and potentially interstellar missions. These velocities \u2014 first, second, and third cosmic velocities \u2014 set the benchmarks for different gravitational boundaries. 1. Definitions First Cosmic Velocity (Orbital Velocity) The minimum speed needed to enter a stable circular orbit just above a celestial body's surface. Formula: $$ v_1 = \\sqrt{\\frac{GM}{R}} $$ Where: \\(G\\) : gravitational constant, \\(M\\) : mass of the celestial body, \\(R\\) : radius of the celestial body. Second Cosmic Velocity (Escape Velocity) The minimum speed needed to escape a celestial body's gravitational field without propulsion. Formula: $$ v_2 = \\sqrt{2} \\cdot v_1 = \\sqrt{\\frac{2GM}{R}} $$ Third Cosmic Velocity The speed needed to escape the gravitational field of the entire star system (e.g., the Solar System). Depends on the Sun's mass and the distance from the Sun at launch (e.g., Earth's orbit). Formula: $$ v_3 = \\sqrt{v_{\\text{escape, sun}}^2 + v_{\\text{orbital}}^2} $$ 2. Mathematical Analysis Variables affecting velocities: Mass \\(M\\) of the celestial body Radius \\(R\\) Gravitational constant \\(G = 6.67430 \\times 10^{-11} \\, \\text{m}^3/\\text{kg}\\cdot\\text{s}^2\\) Assumptions: No atmospheric drag No rotational effects 4. Importance in Space Exploration First Cosmic Velocity : Used for satellite launches and orbital space stations (e.g., ISS). Second Cosmic Velocity : Required for missions leaving a planet (e.g., Moon missions). Third Cosmic Velocity : Necessary for escaping the solar system (e.g., Voyager probes). 5. Conclusion Understanding and calculating cosmic velocities is essential in mission planning, spacecraft design, and predicting the energy requirements for various goals in space exploration \u2014 from placing satellites into orbit to sending probes across interstellar distances.","title":"Problem 2: Escape Velocities and Cosmic Velocities"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2-escape-velocities-and-cosmic-velocities","text":"","title":"Problem 2: Escape Velocities and Cosmic Velocities"},{"location":"1%20Physics/2%20Gravity/Problem_2/#motivation","text":"Escape velocity represents the minimum speed an object must attain to break free from a celestial body's gravitational pull without further propulsion. This idea scales up through the concept of cosmic velocities , which are key to understanding artificial satellites, interplanetary travel, and potentially interstellar missions. These velocities \u2014 first, second, and third cosmic velocities \u2014 set the benchmarks for different gravitational boundaries.","title":"Motivation"},{"location":"1%20Physics/2%20Gravity/Problem_2/#1-definitions","text":"","title":"1. Definitions"},{"location":"1%20Physics/2%20Gravity/Problem_2/#first-cosmic-velocity-orbital-velocity","text":"The minimum speed needed to enter a stable circular orbit just above a celestial body's surface. Formula: $$ v_1 = \\sqrt{\\frac{GM}{R}} $$ Where: \\(G\\) : gravitational constant, \\(M\\) : mass of the celestial body, \\(R\\) : radius of the celestial body.","title":"First Cosmic Velocity (Orbital Velocity)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#second-cosmic-velocity-escape-velocity","text":"The minimum speed needed to escape a celestial body's gravitational field without propulsion. Formula: $$ v_2 = \\sqrt{2} \\cdot v_1 = \\sqrt{\\frac{2GM}{R}} $$","title":"Second Cosmic Velocity (Escape Velocity)"},{"location":"1%20Physics/2%20Gravity/Problem_2/#third-cosmic-velocity","text":"The speed needed to escape the gravitational field of the entire star system (e.g., the Solar System). Depends on the Sun's mass and the distance from the Sun at launch (e.g., Earth's orbit). Formula: $$ v_3 = \\sqrt{v_{\\text{escape, sun}}^2 + v_{\\text{orbital}}^2} $$","title":"Third Cosmic Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_2/#2-mathematical-analysis","text":"Variables affecting velocities: Mass \\(M\\) of the celestial body Radius \\(R\\) Gravitational constant \\(G = 6.67430 \\times 10^{-11} \\, \\text{m}^3/\\text{kg}\\cdot\\text{s}^2\\) Assumptions: No atmospheric drag No rotational effects","title":"2. Mathematical Analysis"},{"location":"1%20Physics/2%20Gravity/Problem_2/#4-importance-in-space-exploration","text":"First Cosmic Velocity : Used for satellite launches and orbital space stations (e.g., ISS). Second Cosmic Velocity : Required for missions leaving a planet (e.g., Moon missions). Third Cosmic Velocity : Necessary for escaping the solar system (e.g., Voyager probes).","title":"4. Importance in Space Exploration"},{"location":"1%20Physics/2%20Gravity/Problem_2/#5-conclusion","text":"Understanding and calculating cosmic velocities is essential in mission planning, spacecraft design, and predicting the energy requirements for various goals in space exploration \u2014 from placing satellites into orbit to sending probes across interstellar distances.","title":"5. Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3: Trajectories of a Freely Released Payload Near Earth Motivation The trajectory of a payload released from a spacecraft orbiting Earth can vary dramatically depending on its initial velocity and direction. This situation is a real-world application of orbital mechanics and Newtonian gravity. In space missions, understanding these trajectories is essential for deploying satellites, safely returning payloads to Earth, and planning interplanetary missions. Analyzing the motion of a freely moving object under gravity gives us crucial insights into orbital behavior. 1. Theoretical Background: Possible Trajectory Types The trajectory of an object released into space is determined by its total mechanical energy : 1.1 Trajectory Types Based on Energy Energy Condition Trajectory Type Description \\(E < 0\\) Elliptical Orbit Bound to the planet; object returns \\(E = 0\\) Parabolic Trajectory Escape threshold; marginal case \\(E > 0\\) Hyperbolic Trajectory Object escapes planet\u2019s gravity permanently 1.2 Key Physical Equations Newton\u2019s Law of Gravitation : $$ F = G \\frac{Mm}{r^2} $$ Acceleration due to gravity : $$ a = \\frac{F}{m} = -\\frac{GM}{r^2} $$ Total Mechanical Energy : $$ E = \\frac{1}{2}mv^2 - \\frac{GMm}{r} $$ 1.3 Typical Values (for Earth) Quantity Value Gravitational Constant \\(G\\) \\(6.674 \\times 10^{-11} \\, \\text{Nm}^2/\\text{kg}^2\\) Earth\u2019s Mass \\(M\\) \\(5.972 \\times 10^{24} \\, \\text{kg}\\) Earth\u2019s Radius \\(R\\) \\(6.371 \\times 10^6 \\, \\text{m}\\) 2. Numerical Simulation To simulate motion under gravity, we can use simple numerical methods like Euler\u2019s Method or more accurate ones like Velocity-Verlet . These methods calculate an object\u2019s trajectory step by step based on Newton\u2019s laws. 3. Python Simulation Required Libraries import numpy as np import matplotlib.pyplot as plt Constants and Earth Parameters G = 6.67430e-11 # Universal gravitational constant M_earth = 5.972e24 # Mass of Earth (kg) R_earth = 6.371e6 # Radius of Earth (m) Simulation Function def simulate_trajectory(r0, v0, dt=1, steps=20000): r = np.array(r0, dtype='float64') v = np.array(v0, dtype='float64') traj = [r.copy()] for _ in range(steps): r_mag = np.linalg.norm(r) if r_mag < R_earth: break # Collided with Earth a = -G * M_earth * r / r_mag**3 v += a * dt r += v * dt traj.append(r.copy()) return np.array(traj) 4. Sample Scenarios Scenario A \u2013 Low-Speed Release (Return to Earth) traj1 = simulate_trajectory( r0=[R_earth + 100e3, 0], # Released from 100 km altitude v0=[0, 500] # 500 m/s velocity ) Explanation : This velocity is insufficient for orbit. The payload quickly falls back to Earth. Scenario B \u2013 Orbital Velocity v_orbit = np.sqrt(G * M_earth / (R_earth + 300e3)) # Orbital speed at 300 km altitude traj2 = simulate_trajectory( r0=[R_earth + 300e3, 0], v0=[0, v_orbit] ) \ud83d\udccd Numerical Result : \\[ v_{\\text{orbit}} \\approx 7.73 \\, \\text{km/s} \\] \ud83d\udd3b Explanation : The payload enters a stable circular orbit. Scenario C \u2013 Escape Velocity v_escape = np.sqrt(2 * G * M_earth / (R_earth + 300e3)) traj3 = simulate_trajectory( r0=[R_earth + 300e3, 0], v0=[0, v_escape] ) Numerical Result : $$ v_{\\text{escape}} \\approx 10.93 \\, \\text{km/s} $$ Explanation : The object exceeds escape speed and leaves Earth\u2019s gravitational field. 5. Visualization def plot_trajectory(trajs, labels): plt.figure(figsize=(8,8)) theta = np.linspace(0, 2*np.pi, 100) plt.plot(R_earth*np.cos(theta), R_earth*np.sin(theta), 'k', label=\"Earth\") for traj, label in zip(trajs, labels): plt.plot(traj[:,0], traj[:,1], label=label) plt.xlabel(\"x (m)\") plt.ylabel(\"y (m)\") plt.legend() plt.axis('equal') plt.title(\"Payload Trajectories Near Earth\") plt.grid(True) plt.show() plot_trajectory( [traj1, traj2, traj3], [\"Return to Earth\", \"Stable Orbit\", \"Escape\"] ) 6. Discussion and Applications If the object is released at low velocity (e.g., 0.5 km/s), it will re-enter Earth and crash. This is applicable to reentry capsules. At orbital velocity , it can remain in stable orbit \u2014 this is the principle behind satellites like the ISS. At escape velocity , the payload can exit Earth's gravity. This is used for lunar and interplanetary missions like Voyager 1. These simulations help engineers understand how small velocity changes drastically alter the mission outcome \u2014 a critical consideration in spacecraft design and mission planning. 7. Conclusion This simulation shows that gravity is the dominant force in determining an object\u2019s path in space and that the object\u2019s initial velocity and direction are crucial. Numerical tools like Python provide powerful insight into predicting and planning space missions.","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3-trajectories-of-a-freely-released-payload-near-earth","text":"","title":"Problem 3: Trajectories of a Freely Released Payload Near Earth"},{"location":"1%20Physics/2%20Gravity/Problem_3/#motivation","text":"The trajectory of a payload released from a spacecraft orbiting Earth can vary dramatically depending on its initial velocity and direction. This situation is a real-world application of orbital mechanics and Newtonian gravity. In space missions, understanding these trajectories is essential for deploying satellites, safely returning payloads to Earth, and planning interplanetary missions. Analyzing the motion of a freely moving object under gravity gives us crucial insights into orbital behavior.","title":"Motivation"},{"location":"1%20Physics/2%20Gravity/Problem_3/#1-theoretical-background-possible-trajectory-types","text":"The trajectory of an object released into space is determined by its total mechanical energy :","title":"1. Theoretical Background: Possible Trajectory Types"},{"location":"1%20Physics/2%20Gravity/Problem_3/#11-trajectory-types-based-on-energy","text":"Energy Condition Trajectory Type Description \\(E < 0\\) Elliptical Orbit Bound to the planet; object returns \\(E = 0\\) Parabolic Trajectory Escape threshold; marginal case \\(E > 0\\) Hyperbolic Trajectory Object escapes planet\u2019s gravity permanently","title":"1.1 Trajectory Types Based on Energy"},{"location":"1%20Physics/2%20Gravity/Problem_3/#12-key-physical-equations","text":"Newton\u2019s Law of Gravitation : $$ F = G \\frac{Mm}{r^2} $$ Acceleration due to gravity : $$ a = \\frac{F}{m} = -\\frac{GM}{r^2} $$ Total Mechanical Energy : $$ E = \\frac{1}{2}mv^2 - \\frac{GMm}{r} $$","title":"1.2 Key Physical Equations"},{"location":"1%20Physics/2%20Gravity/Problem_3/#13-typical-values-for-earth","text":"Quantity Value Gravitational Constant \\(G\\) \\(6.674 \\times 10^{-11} \\, \\text{Nm}^2/\\text{kg}^2\\) Earth\u2019s Mass \\(M\\) \\(5.972 \\times 10^{24} \\, \\text{kg}\\) Earth\u2019s Radius \\(R\\) \\(6.371 \\times 10^6 \\, \\text{m}\\)","title":"1.3 Typical Values (for Earth)"},{"location":"1%20Physics/2%20Gravity/Problem_3/#2-numerical-simulation","text":"To simulate motion under gravity, we can use simple numerical methods like Euler\u2019s Method or more accurate ones like Velocity-Verlet . These methods calculate an object\u2019s trajectory step by step based on Newton\u2019s laws.","title":"2. Numerical Simulation"},{"location":"1%20Physics/2%20Gravity/Problem_3/#3-python-simulation","text":"","title":"3. Python Simulation"},{"location":"1%20Physics/2%20Gravity/Problem_3/#required-libraries","text":"import numpy as np import matplotlib.pyplot as plt","title":"Required Libraries"},{"location":"1%20Physics/2%20Gravity/Problem_3/#constants-and-earth-parameters","text":"G = 6.67430e-11 # Universal gravitational constant M_earth = 5.972e24 # Mass of Earth (kg) R_earth = 6.371e6 # Radius of Earth (m)","title":"Constants and Earth Parameters"},{"location":"1%20Physics/2%20Gravity/Problem_3/#simulation-function","text":"def simulate_trajectory(r0, v0, dt=1, steps=20000): r = np.array(r0, dtype='float64') v = np.array(v0, dtype='float64') traj = [r.copy()] for _ in range(steps): r_mag = np.linalg.norm(r) if r_mag < R_earth: break # Collided with Earth a = -G * M_earth * r / r_mag**3 v += a * dt r += v * dt traj.append(r.copy()) return np.array(traj)","title":"Simulation Function"},{"location":"1%20Physics/2%20Gravity/Problem_3/#4-sample-scenarios","text":"","title":"4. Sample Scenarios"},{"location":"1%20Physics/2%20Gravity/Problem_3/#scenario-a-low-speed-release-return-to-earth","text":"traj1 = simulate_trajectory( r0=[R_earth + 100e3, 0], # Released from 100 km altitude v0=[0, 500] # 500 m/s velocity ) Explanation : This velocity is insufficient for orbit. The payload quickly falls back to Earth.","title":"Scenario A \u2013 Low-Speed Release (Return to Earth)"},{"location":"1%20Physics/2%20Gravity/Problem_3/#scenario-b-orbital-velocity","text":"v_orbit = np.sqrt(G * M_earth / (R_earth + 300e3)) # Orbital speed at 300 km altitude traj2 = simulate_trajectory( r0=[R_earth + 300e3, 0], v0=[0, v_orbit] ) \ud83d\udccd Numerical Result : \\[ v_{\\text{orbit}} \\approx 7.73 \\, \\text{km/s} \\] \ud83d\udd3b Explanation : The payload enters a stable circular orbit.","title":"Scenario B \u2013 Orbital Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_3/#scenario-c-escape-velocity","text":"v_escape = np.sqrt(2 * G * M_earth / (R_earth + 300e3)) traj3 = simulate_trajectory( r0=[R_earth + 300e3, 0], v0=[0, v_escape] ) Numerical Result : $$ v_{\\text{escape}} \\approx 10.93 \\, \\text{km/s} $$ Explanation : The object exceeds escape speed and leaves Earth\u2019s gravitational field.","title":"Scenario C \u2013 Escape Velocity"},{"location":"1%20Physics/2%20Gravity/Problem_3/#5-visualization","text":"def plot_trajectory(trajs, labels): plt.figure(figsize=(8,8)) theta = np.linspace(0, 2*np.pi, 100) plt.plot(R_earth*np.cos(theta), R_earth*np.sin(theta), 'k', label=\"Earth\") for traj, label in zip(trajs, labels): plt.plot(traj[:,0], traj[:,1], label=label) plt.xlabel(\"x (m)\") plt.ylabel(\"y (m)\") plt.legend() plt.axis('equal') plt.title(\"Payload Trajectories Near Earth\") plt.grid(True) plt.show() plot_trajectory( [traj1, traj2, traj3], [\"Return to Earth\", \"Stable Orbit\", \"Escape\"] )","title":"5. Visualization"},{"location":"1%20Physics/2%20Gravity/Problem_3/#6-discussion-and-applications","text":"If the object is released at low velocity (e.g., 0.5 km/s), it will re-enter Earth and crash. This is applicable to reentry capsules. At orbital velocity , it can remain in stable orbit \u2014 this is the principle behind satellites like the ISS. At escape velocity , the payload can exit Earth's gravity. This is used for lunar and interplanetary missions like Voyager 1. These simulations help engineers understand how small velocity changes drastically alter the mission outcome \u2014 a critical consideration in spacecraft design and mission planning.","title":"6. Discussion and Applications"},{"location":"1%20Physics/2%20Gravity/Problem_3/#7-conclusion","text":"This simulation shows that gravity is the dominant force in determining an object\u2019s path in space and that the object\u2019s initial velocity and direction are crucial. Numerical tools like Python provide powerful insight into predicting and planning space missions.","title":"7. Conclusion"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Interference Patterns on a Water Surface Motivation Interference patterns occur when waves from different sources overlap, forming regions of constructive and destructive interference. Observing how these ripples interact on a water surface is a powerful way to explore wave behavior and superposition. In this task, we simulate such a pattern using wave sources placed at the vertices of a regular polygon. Chosen Polygon We select a square as our regular polygon for simplicity and clarity. The wave sources will be placed at its vertices. Wave Model Each point source emits a wave described by: \\(u_i(x, y, t) = A \\cdot \\cos(k r_i - \\omega t + \\phi)\\) Where: - \\(u_i\\) : displacement due to source i . - \\(A\\) : amplitude. - \\(k=\\frac{2\\pi}{\\lambda}\\) : wave number. - \\(\\omega = 2\\pi f\\) : angular frequency. - \\(r_i\\) : distance from source i to point \\((x, y)\\) . - \\(\\phi\\) : initial phase (assumed 0 here). - \\(t\\) : time. The total displacement at any point is: \\[ u(x, y, t) = \\sum_{i=1}^{N} u_i(x, y, t) \\] \ud83d\udcca Results & Analysis Constructive Interference : Bright/red regions where wave crests from multiple sources align. Destructive Interference : Dark/blue regions where crests and troughs cancel each other. Pattern Symmetry : Due to the square configuration, the resulting interference pattern exhibits fourfold symmetry. Fringes and Nodes : Alternating bands/rings indicating changing interference conditions across the plane. Extension Ideas Test other polygons: triangle, pentagon, hexagon. Animate the simulation over time. Explore phase differences between sources. Conclusion This simulation demonstrates how multiple wave sources interact to form complex interference patterns. The symmetry and distribution of nodes/antinodes depend on the geometric arrangement of the sources, providing a beautiful and intuitive insight into wave superposition. Wave Interference on the Water Surface simulation","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#interference-patterns-on-a-water-surface","text":"","title":"Interference Patterns on a Water Surface"},{"location":"1%20Physics/3%20Waves/Problem_1/#motivation","text":"Interference patterns occur when waves from different sources overlap, forming regions of constructive and destructive interference. Observing how these ripples interact on a water surface is a powerful way to explore wave behavior and superposition. In this task, we simulate such a pattern using wave sources placed at the vertices of a regular polygon.","title":"Motivation"},{"location":"1%20Physics/3%20Waves/Problem_1/#chosen-polygon","text":"We select a square as our regular polygon for simplicity and clarity. The wave sources will be placed at its vertices.","title":"Chosen Polygon"},{"location":"1%20Physics/3%20Waves/Problem_1/#wave-model","text":"Each point source emits a wave described by: \\(u_i(x, y, t) = A \\cdot \\cos(k r_i - \\omega t + \\phi)\\) Where: - \\(u_i\\) : displacement due to source i . - \\(A\\) : amplitude. - \\(k=\\frac{2\\pi}{\\lambda}\\) : wave number. - \\(\\omega = 2\\pi f\\) : angular frequency. - \\(r_i\\) : distance from source i to point \\((x, y)\\) . - \\(\\phi\\) : initial phase (assumed 0 here). - \\(t\\) : time. The total displacement at any point is: \\[ u(x, y, t) = \\sum_{i=1}^{N} u_i(x, y, t) \\]","title":"Wave Model"},{"location":"1%20Physics/3%20Waves/Problem_1/#results-analysis","text":"Constructive Interference : Bright/red regions where wave crests from multiple sources align. Destructive Interference : Dark/blue regions where crests and troughs cancel each other. Pattern Symmetry : Due to the square configuration, the resulting interference pattern exhibits fourfold symmetry. Fringes and Nodes : Alternating bands/rings indicating changing interference conditions across the plane.","title":"\ud83d\udcca Results &amp; Analysis"},{"location":"1%20Physics/3%20Waves/Problem_1/#extension-ideas","text":"Test other polygons: triangle, pentagon, hexagon. Animate the simulation over time. Explore phase differences between sources.","title":"Extension Ideas"},{"location":"1%20Physics/3%20Waves/Problem_1/#conclusion","text":"This simulation demonstrates how multiple wave sources interact to form complex interference patterns. The symmetry and distribution of nodes/antinodes depend on the geometric arrangement of the sources, providing a beautiful and intuitive insight into wave superposition. Wave Interference on the Water Surface simulation","title":"Conclusion"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Electromagnetism Problem 1 \u2014 Simulating the Effects of the Lorentz Force Motivation The Lorentz force governs how charged particles move in the presence of electric and magnetic fields. It plays a central role in devices such as: Cyclotrons and synchrotrons (used in particle accelerators), Mass spectrometers (for analyzing atomic and molecular masses), Plasma confinement devices (e.g., in fusion reactors). By simulating the motion of a charged particle under the Lorentz force, we gain insight into the fundamental mechanisms behind electromagnetic control and guidance systems. Mathematical Background The Lorentz force acting on a particle with charge \\(q\\) , moving with velocity \\(\\vec{v}\\) , in electric field \\(\\vec{E}\\) and magnetic field \\(\\vec{B}\\) is given by: \\[ \\vec{F} = q(\\vec{E} + \\vec{v} \\times \\vec{B}) \\] According to Newton's second law: \\[ \\vec{F} = m \\cdot \\frac{d\\vec{v}}{dt} \\] Combining both expressions: \\[m \\cdot \\frac{d\\vec{v}}{dt} = q(\\vec{E} + \\vec{v} \\times \\vec{B})\\] To simulate particle motion, we numerically solve this differential equation using time-stepping methods (e.g., Euler or Runge-Kutta ). Simulation Scenarios We explore the particle's trajectory in three configurations: Uniform Magnetic Field Only Expect circular or helical motion. Larmor radius: $$ r_L = \\frac{mv_\\perp}{|qB|} $$ Cyclotron frequency: $$ \\omega_c = \\frac{|qB|}{m} $$ Uniform Electric and Magnetic Fields Complex trajectory depending on field orientations and strengths. Crossed \\(\\vec{E} \\perp \\vec{B}\\) Fields \\(\\vec{E} \\times \\vec{B}\\) drift: \\( \\(\\vec{v}_{\\text{drift}} = \\frac{\\vec{E} \\times \\vec{B}}{B^2}\\) \\) Numerical Method We use the Euler method for simplicity, updating velocity and position iteratively: \\[\\vec{v}_{n+1} = \\vec{v}_n + \\frac{q}{m} (\\vec{E} + \\vec{v}_n \\times \\vec{B}) \\cdot \\Delta t\\] \\[\\vec{r}_{n+1} = \\vec{r}_n + \\vec{v}_{n+1} \\cdot \\Delta t\\] (Alternatively, a 4th-order Runge-Kutta method can be used for better accuracy.) Parameters Symbol Meaning Typical Value \\(q\\) Particle charge \\(1.6 \\times 10^{-19} \\, \\text{C}\\) \\(m\\) Particle mass \\(9.1 \\times 10^{-31} \\, \\text{kg}\\) (electron) \\(\\vec{E}\\) Electric field vector e.g., \\((0, 0, 100) \\, \\text{V/m}\\) \\(\\vec{B}\\) Magnetic field vector e.g., \\((0, 0, 1) \\, \\text{T}\\) \\(\\vec{v}_0\\) Initial velocity vector User-defined \\(\\Delta t\\) Time step \\(1 \\times 10^{-11} \\, \\text{s}\\) Visual Output For each simulation: 2D Trajectory : \\(x(t), y(t)\\) 3D Trajectory : \\(x(t), y(t), z(t)\\) Highlight: Circular or spiral motion Drift due to crossed fields Larmor radius changes with field strength Lorentz Force Simulation Real-World Applications Application Lorentz Force Effect Cyclotron Particles spiral outward under magnetic field Mass Spectrometer Different trajectories reveal mass/charge ratio Fusion Reactors (Tokamak) Magnetic confinement of plasma","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#electromagnetism","text":"","title":"Electromagnetism"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1-simulating-the-effects-of-the-lorentz-force","text":"","title":"Problem 1 \u2014 Simulating the Effects of the Lorentz Force"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#motivation","text":"The Lorentz force governs how charged particles move in the presence of electric and magnetic fields. It plays a central role in devices such as: Cyclotrons and synchrotrons (used in particle accelerators), Mass spectrometers (for analyzing atomic and molecular masses), Plasma confinement devices (e.g., in fusion reactors). By simulating the motion of a charged particle under the Lorentz force, we gain insight into the fundamental mechanisms behind electromagnetic control and guidance systems.","title":"Motivation"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#mathematical-background","text":"The Lorentz force acting on a particle with charge \\(q\\) , moving with velocity \\(\\vec{v}\\) , in electric field \\(\\vec{E}\\) and magnetic field \\(\\vec{B}\\) is given by: \\[ \\vec{F} = q(\\vec{E} + \\vec{v} \\times \\vec{B}) \\] According to Newton's second law: \\[ \\vec{F} = m \\cdot \\frac{d\\vec{v}}{dt} \\] Combining both expressions: \\[m \\cdot \\frac{d\\vec{v}}{dt} = q(\\vec{E} + \\vec{v} \\times \\vec{B})\\] To simulate particle motion, we numerically solve this differential equation using time-stepping methods (e.g., Euler or Runge-Kutta ).","title":"Mathematical Background"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#simulation-scenarios","text":"We explore the particle's trajectory in three configurations: Uniform Magnetic Field Only Expect circular or helical motion. Larmor radius: $$ r_L = \\frac{mv_\\perp}{|qB|} $$ Cyclotron frequency: $$ \\omega_c = \\frac{|qB|}{m} $$ Uniform Electric and Magnetic Fields Complex trajectory depending on field orientations and strengths. Crossed \\(\\vec{E} \\perp \\vec{B}\\) Fields \\(\\vec{E} \\times \\vec{B}\\) drift: \\( \\(\\vec{v}_{\\text{drift}} = \\frac{\\vec{E} \\times \\vec{B}}{B^2}\\) \\)","title":"Simulation Scenarios"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#numerical-method","text":"We use the Euler method for simplicity, updating velocity and position iteratively: \\[\\vec{v}_{n+1} = \\vec{v}_n + \\frac{q}{m} (\\vec{E} + \\vec{v}_n \\times \\vec{B}) \\cdot \\Delta t\\] \\[\\vec{r}_{n+1} = \\vec{r}_n + \\vec{v}_{n+1} \\cdot \\Delta t\\] (Alternatively, a 4th-order Runge-Kutta method can be used for better accuracy.)","title":"Numerical Method"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#parameters","text":"Symbol Meaning Typical Value \\(q\\) Particle charge \\(1.6 \\times 10^{-19} \\, \\text{C}\\) \\(m\\) Particle mass \\(9.1 \\times 10^{-31} \\, \\text{kg}\\) (electron) \\(\\vec{E}\\) Electric field vector e.g., \\((0, 0, 100) \\, \\text{V/m}\\) \\(\\vec{B}\\) Magnetic field vector e.g., \\((0, 0, 1) \\, \\text{T}\\) \\(\\vec{v}_0\\) Initial velocity vector User-defined \\(\\Delta t\\) Time step \\(1 \\times 10^{-11} \\, \\text{s}\\)","title":"Parameters"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#visual-output","text":"For each simulation: 2D Trajectory : \\(x(t), y(t)\\) 3D Trajectory : \\(x(t), y(t), z(t)\\) Highlight: Circular or spiral motion Drift due to crossed fields Larmor radius changes with field strength Lorentz Force Simulation","title":"Visual Output"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#real-world-applications","text":"Application Lorentz Force Effect Cyclotron Particles spiral outward under magnetic field Mass Spectrometer Different trajectories reveal mass/charge ratio Fusion Reactors (Tokamak) Magnetic confinement of plasma","title":"Real-World Applications"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Algorithm Description The goal is to compute the equivalent resistance between two nodes (source and sink) in a circuit modeled as an undirected graph, where: Nodes : Represent circuit junctions. Edges : Represent resistors, with weights as resistance values (in ohms). The algorithm iteratively simplifies the graph by reducing series and parallel resistor configurations until only the source and sink nodes remain, connected by a single edge whose weight is the equivalent resistance. Steps: Series Connections : Identify a node with degree 2, connected to two resistors. Replace with a single resistor: $$ R_{\\text{series}} = R_1 + R_2 $$ Remove the node, connect its neighbors with the new resistance. Parallel Connections : Identify multiple edges between two nodes. Replace with one edge: \\(R_{\\text{parallel}} = \\frac{R_1 \\cdot R_2}{R_1 + R_2}\\) or \\(\\frac{1}{R_{\\text{parallel}}} = \\frac{1}{R_1} + \\frac{1}{R_2}\\) Update the graph with the new edge. Iteration : Repeat series and parallel reductions until only the source and sink remain. Nested structures are handled iteratively, reducing inner patterns first. Termination : Stop when the graph has two nodes connected by one edge, its weight being the equivalent resistance. Assumes series-parallel reducible circuits; otherwise, additional methods (e.g., delta-wye) are needed. Explanation Series : A degree-2 node (n1\u2013R1\u2013n\u2013R2\u2013n2) is reduced to n1\u2013(R1 + R2)\u2013n2, removing n. Parallel : Multiple edges between nodes are combined using conductance: \\(\\frac{1}{R_{\\text{parallel}}} = \\sum \\frac{1}{R_i}\\) Nested Handling : Iterative reductions simplify inner structures first, with DFS aiding pattern detection. Edge Cases : Avoids self-loops and ensures a valid path exists. Example Applications Example 1: Series Combination Circuit : 2\u03a9 and 3\u03a9 in series between A and B via C. Graph : A --(2\u03a9)--> C --(3\u03a9)--> B Steps : C has degree 2. Series: \\(2 + 3 = 5\u03a9\\) Remove C, add A --(5\u03a9)--> B. Output : 5\u03a9 Verification : Current at 1V: \\(I = \\frac{1}{5} = 0.2A\\) Voltage drops: \\(V_1 = 0.2 \\cdot 2 = 0.4V\\) \\(V_2 = 0.2 \\cdot 3 = 0.6V\\) total \\(0.4 + 0.6 = 1V\\) Efficiency and Improvements Time Complexity : Series: O(V) to find degree-2 nodes. Parallel: O(E) for multi-edges, up to O(V\u00b2) in dense graphs. Iterations: Up to O(V). Total: O(V\u00b2) to O(V\u00b3). Space Complexity : O(V + E) for adjacency lists. Improvements : Use priority queues for degree-2 nodes or multi-edges. Apply DFS to prioritize inner reductions. Add delta-wye for non-series-parallel circuits. Optimize with NetworkX for graph operations. Use high-precision arithmetic for small resistances. Graph-Based Equivalent Resistance Calculator Conclusion This algorithm efficiently computes equivalent resistance for series-parallel circuits, with numerical calculations (conductance, currents, voltages) ensuring accuracy. Iterative reductions handle nested structures, and extensions like delta-wye can address complex graphs.","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#algorithm-description","text":"The goal is to compute the equivalent resistance between two nodes (source and sink) in a circuit modeled as an undirected graph, where: Nodes : Represent circuit junctions. Edges : Represent resistors, with weights as resistance values (in ohms). The algorithm iteratively simplifies the graph by reducing series and parallel resistor configurations until only the source and sink nodes remain, connected by a single edge whose weight is the equivalent resistance.","title":"Algorithm Description"},{"location":"1%20Physics/5%20Circuits/Problem_1/#steps","text":"Series Connections : Identify a node with degree 2, connected to two resistors. Replace with a single resistor: $$ R_{\\text{series}} = R_1 + R_2 $$ Remove the node, connect its neighbors with the new resistance. Parallel Connections : Identify multiple edges between two nodes. Replace with one edge: \\(R_{\\text{parallel}} = \\frac{R_1 \\cdot R_2}{R_1 + R_2}\\) or \\(\\frac{1}{R_{\\text{parallel}}} = \\frac{1}{R_1} + \\frac{1}{R_2}\\) Update the graph with the new edge. Iteration : Repeat series and parallel reductions until only the source and sink remain. Nested structures are handled iteratively, reducing inner patterns first. Termination : Stop when the graph has two nodes connected by one edge, its weight being the equivalent resistance. Assumes series-parallel reducible circuits; otherwise, additional methods (e.g., delta-wye) are needed.","title":"Steps:"},{"location":"1%20Physics/5%20Circuits/Problem_1/#explanation","text":"Series : A degree-2 node (n1\u2013R1\u2013n\u2013R2\u2013n2) is reduced to n1\u2013(R1 + R2)\u2013n2, removing n. Parallel : Multiple edges between nodes are combined using conductance: \\(\\frac{1}{R_{\\text{parallel}}} = \\sum \\frac{1}{R_i}\\) Nested Handling : Iterative reductions simplify inner structures first, with DFS aiding pattern detection. Edge Cases : Avoids self-loops and ensures a valid path exists.","title":"Explanation"},{"location":"1%20Physics/5%20Circuits/Problem_1/#example-applications","text":"","title":"Example Applications"},{"location":"1%20Physics/5%20Circuits/Problem_1/#example-1-series-combination","text":"Circuit : 2\u03a9 and 3\u03a9 in series between A and B via C. Graph : A --(2\u03a9)--> C --(3\u03a9)--> B Steps : C has degree 2. Series: \\(2 + 3 = 5\u03a9\\) Remove C, add A --(5\u03a9)--> B. Output : 5\u03a9 Verification : Current at 1V: \\(I = \\frac{1}{5} = 0.2A\\) Voltage drops: \\(V_1 = 0.2 \\cdot 2 = 0.4V\\) \\(V_2 = 0.2 \\cdot 3 = 0.6V\\) total \\(0.4 + 0.6 = 1V\\)","title":"Example 1: Series Combination"},{"location":"1%20Physics/5%20Circuits/Problem_1/#efficiency-and-improvements","text":"Time Complexity : Series: O(V) to find degree-2 nodes. Parallel: O(E) for multi-edges, up to O(V\u00b2) in dense graphs. Iterations: Up to O(V). Total: O(V\u00b2) to O(V\u00b3). Space Complexity : O(V + E) for adjacency lists. Improvements : Use priority queues for degree-2 nodes or multi-edges. Apply DFS to prioritize inner reductions. Add delta-wye for non-series-parallel circuits. Optimize with NetworkX for graph operations. Use high-precision arithmetic for small resistances. Graph-Based Equivalent Resistance Calculator","title":"Efficiency and Improvements"},{"location":"1%20Physics/5%20Circuits/Problem_1/#conclusion","text":"This algorithm efficiently computes equivalent resistance for series-parallel circuits, with numerical calculations (conductance, currents, voltages) ensuring accuracy. Iterative reductions handle nested structures, and extensions like delta-wye can address complex graphs.","title":"Conclusion"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Central Limit Theorem Exploration through Simulations Motivation The Central Limit Theorem (CLT) is a fundamental concept in statistics, asserting that regardless of the population's distribution, the sampling distribution of the sample mean will approximate a normal distribution as the sample size grows. This principle allows us to make inferences about a population's characteristics even if the population distribution is not normal. By simulating sampling distributions for different types of population distributions, we can visually observe how the CLT works and the role that sample size and population characteristics play in shaping the sampling distribution. Mathematical Background The Central Limit Theorem states: Let \\(X_1, X_2, ..., X_n\\) be random variables drawn from any distribution with mean \\(\\mu\\) and variance \\(\\sigma^2\\) . The sample mean \\(\\bar{X}_n = \\frac{1}{n} \\sum_{i=1}^n X_i\\) will approximate a normal distribution with: Mean \\(\\mu\\) , Variance \\(\\frac{\\sigma^2}{n}\\) as the sample size \\(n\\) increases. Thus, no matter the underlying distribution, as the sample size increases, the distribution of the sample mean will become more bell-shaped and resemble a normal distribution. Simulation Setup We will simulate the following distributions: 1. Uniform Distribution 2. Exponential Distribution 3. Binomial Distribution For each distribution, we will: - Generate a large population of data points. - Randomly sample from the population and calculate the sample mean for different sample sizes. - Repeat the process to create a sampling distribution of the sample mean for each sample size. - Plot the histograms of these sampling distributions and observe how they approach a normal distribution as the sample size increases. Simulation Process Step 1: Create the Population Distributions We will generate a large population for each of the following distributions: Uniform Distribution : A distribution where each value has an equal probability of occurring within a specified range. Exponential Distribution : A distribution often used to model the time between events in a Poisson process. Binomial Distribution : A distribution representing the number of successes in a fixed number of trials. Step 2: Sample and Calculate Sample Means For each population, we'll randomly sample from the population multiple times, calculating the sample mean each time. We will use different sample sizes (e.g., 5, 10, 30, 50) to see how the sample mean distribution changes. Step 3: Visualization We will plot histograms of the sample means for each sample size, and observe the convergence towards a normal distribution as the sample size increases. Output and Observations Uniform Distribution : For small sample sizes (e.g., 5), the sampling distribution is spread out and not normal. As the sample size increases, the distribution of sample means becomes more bell-shaped. Exponential Distribution : With a highly skewed population, the sampling distribution of the mean will initially appear skewed for small sample sizes. As the sample size increases, the skew diminishes, and the distribution approaches a normal shape. Binomial Distribution : The sampling distribution starts to resemble a normal distribution even with smaller sample sizes due to the inherent nature of the binomial distribution, which tends to become normal as the number of trials increases. Practical Applications Estimating Population Parameters : CLT allows us to estimate the population mean using the sample mean, with increasing accuracy as the sample size grows. Quality Control : In manufacturing, the CLT is used to monitor product quality by taking random samples and analyzing the sample mean to predict the overall quality. Predicting Outcomes in Financial Models : Financial analysts use the CLT to model returns and risks by taking large samples of historical data to predict future performance. Central Limit Theorem Simulation Central Limit Theorem Simulation 2 Extension Ideas Impact of Population Variance : Investigate how the variance of the population affects the spread of the sampling distribution for different sample sizes. Non-Normal Populations : Experiment with more complex population distributions (e.g., Gamma, Pareto) and see how the sample mean distribution approaches normality. Dynamic Simulations : Create interactive visualizations where users can adjust parameters like sample size and population distribution in real-time to observe the effects on the CLT.","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#central-limit-theorem-exploration-through-simulations","text":"","title":"Central Limit Theorem Exploration through Simulations"},{"location":"1%20Physics/6%20Statistics/Problem_1/#motivation","text":"The Central Limit Theorem (CLT) is a fundamental concept in statistics, asserting that regardless of the population's distribution, the sampling distribution of the sample mean will approximate a normal distribution as the sample size grows. This principle allows us to make inferences about a population's characteristics even if the population distribution is not normal. By simulating sampling distributions for different types of population distributions, we can visually observe how the CLT works and the role that sample size and population characteristics play in shaping the sampling distribution.","title":"Motivation"},{"location":"1%20Physics/6%20Statistics/Problem_1/#mathematical-background","text":"The Central Limit Theorem states: Let \\(X_1, X_2, ..., X_n\\) be random variables drawn from any distribution with mean \\(\\mu\\) and variance \\(\\sigma^2\\) . The sample mean \\(\\bar{X}_n = \\frac{1}{n} \\sum_{i=1}^n X_i\\) will approximate a normal distribution with: Mean \\(\\mu\\) , Variance \\(\\frac{\\sigma^2}{n}\\) as the sample size \\(n\\) increases. Thus, no matter the underlying distribution, as the sample size increases, the distribution of the sample mean will become more bell-shaped and resemble a normal distribution.","title":"Mathematical Background"},{"location":"1%20Physics/6%20Statistics/Problem_1/#simulation-setup","text":"We will simulate the following distributions: 1. Uniform Distribution 2. Exponential Distribution 3. Binomial Distribution For each distribution, we will: - Generate a large population of data points. - Randomly sample from the population and calculate the sample mean for different sample sizes. - Repeat the process to create a sampling distribution of the sample mean for each sample size. - Plot the histograms of these sampling distributions and observe how they approach a normal distribution as the sample size increases.","title":"Simulation Setup"},{"location":"1%20Physics/6%20Statistics/Problem_1/#simulation-process","text":"","title":"Simulation Process"},{"location":"1%20Physics/6%20Statistics/Problem_1/#step-1-create-the-population-distributions","text":"We will generate a large population for each of the following distributions: Uniform Distribution : A distribution where each value has an equal probability of occurring within a specified range. Exponential Distribution : A distribution often used to model the time between events in a Poisson process. Binomial Distribution : A distribution representing the number of successes in a fixed number of trials.","title":"Step 1: Create the Population Distributions"},{"location":"1%20Physics/6%20Statistics/Problem_1/#step-2-sample-and-calculate-sample-means","text":"For each population, we'll randomly sample from the population multiple times, calculating the sample mean each time. We will use different sample sizes (e.g., 5, 10, 30, 50) to see how the sample mean distribution changes.","title":"Step 2: Sample and Calculate Sample Means"},{"location":"1%20Physics/6%20Statistics/Problem_1/#step-3-visualization","text":"We will plot histograms of the sample means for each sample size, and observe the convergence towards a normal distribution as the sample size increases.","title":"Step 3: Visualization"},{"location":"1%20Physics/6%20Statistics/Problem_1/#output-and-observations","text":"Uniform Distribution : For small sample sizes (e.g., 5), the sampling distribution is spread out and not normal. As the sample size increases, the distribution of sample means becomes more bell-shaped. Exponential Distribution : With a highly skewed population, the sampling distribution of the mean will initially appear skewed for small sample sizes. As the sample size increases, the skew diminishes, and the distribution approaches a normal shape. Binomial Distribution : The sampling distribution starts to resemble a normal distribution even with smaller sample sizes due to the inherent nature of the binomial distribution, which tends to become normal as the number of trials increases.","title":"Output and Observations"},{"location":"1%20Physics/6%20Statistics/Problem_1/#practical-applications","text":"Estimating Population Parameters : CLT allows us to estimate the population mean using the sample mean, with increasing accuracy as the sample size grows. Quality Control : In manufacturing, the CLT is used to monitor product quality by taking random samples and analyzing the sample mean to predict the overall quality. Predicting Outcomes in Financial Models : Financial analysts use the CLT to model returns and risks by taking large samples of historical data to predict future performance. Central Limit Theorem Simulation Central Limit Theorem Simulation 2","title":"Practical Applications"},{"location":"1%20Physics/6%20Statistics/Problem_1/#extension-ideas","text":"Impact of Population Variance : Investigate how the variance of the population affects the spread of the sampling distribution for different sample sizes. Non-Normal Populations : Experiment with more complex population distributions (e.g., Gamma, Pareto) and see how the sample mean distribution approaches normality. Dynamic Simulations : Create interactive visualizations where users can adjust parameters like sample size and population distribution in real-time to observe the effects on the CLT.","title":"Extension Ideas"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Elbette! A\u015fa\u011f\u0131da, Monte Carlo y\u00f6ntemleriyle \u03c0'nin tahmini problemini i\u00e7eren a\u00e7\u0131klamay\u0131 biraz daha uzun , daha fazla say\u0131sal ifade i\u00e7eren ve teknik y\u00f6nleri \u00f6ne \u00e7\u0131karan bir \u015fekilde sunuyorum. Bu versiyon, hem teorik hem de uygulamal\u0131 y\u00f6nleri dengeli \u015fekilde a\u00e7\u0131klar: Problem 2: Estimating \u03c0 Using Monte Carlo Methods Motivation The number \u03c0 (pi) is a fundamental mathematical constant that represents the ratio of a circle\u2019s circumference to its diameter, approximately 3.1415926535\u2026 . Despite its apparent simplicity, \u03c0 cannot be expressed exactly as a fraction and has an infinite non-repeating decimal expansion. Estimating \u03c0 numerically is an excellent example of how randomness and probability can be used to solve deterministic problems. Monte Carlo methods are a family of computational algorithms that rely on repeated random sampling to obtain numerical results. These methods are widely used in fields such as physics , finance , AI , and engineering , especially when deterministic methods become too complex or infeasible. This problem uses two classical Monte Carlo approaches to estimate \u03c0: The Circle Method (Geometric probability) Buffon's Needle Experiment (Probabilistic geometry) Part 1: Estimating \u03c0 Using a Circle Theoretical Foundation Imagine a unit circle (radius \\(r = 1\\) ) centered at the origin and inscribed in a square with side length 2. The area of the circle is: \\[ A_{\\text{circle}} = \\pi r^2 = \\pi \\] The area of the square is: \\[ A_{\\text{square}} = (2r)^2 = 4 \\] Therefore, the probability that a randomly chosen point inside the square also lies inside the circle is: \\[ P = \\frac{A_{\\text{circle}}}{A_{\\text{square}}} = \\frac{\\pi}{4} \\] Thus, if we generate N random points \\((x, y)\\) uniformly in the square \\([-1, 1] \\times [-1, 1]\\) and count how many of them fall inside the circle (i.e., satisfy \\(x^2 + y^2 \\leq 1\\) ), then: \\[ \\pi \\approx 4 \\cdot \\frac{N_{\\text{inside}}}{N} \\] Numerical Results Example For N = 1,000 points \u2192 \u03c0 \u2248 3.14 For N = 10,000 points \u2192 \u03c0 \u2248 3.141 For N = 1,000,000 points \u2192 \u03c0 \u2248 3.14159 The accuracy improves with \\(\\sqrt{N}\\) convergence behavior \u2014 to get one more digit of accuracy, we need roughly 100\u00d7 more samples. Part 2: Estimating \u03c0 Using Buffon\u2019s Needle Theoretical Foundation Buffon's Needle Problem is one of the earliest problems in geometric probability. Consider a floor with equally spaced parallel lines, d units apart. If we randomly drop a needle of length L \u2264 d , the probability that the needle crosses a line is given by: \\[ P = \\frac{2L}{\\pi d} \\] Solving for \u03c0: \\[ \\pi \\approx \\frac{2L \\cdot N}{d \\cdot H} \\] Where: \\(N\\) = total number of needle drops \\(H\\) = number of times the needle crosses a line For example, if we drop 10,000 needles of length 1 on lines spaced 2 units apart, and 6,366 cross a line, we estimate: \\[ \\pi \\approx \\frac{2 \\cdot 1 \\cdot 10,000}{2 \\cdot 6366} \\approx 3.1413 \\] Statistical Behavior Buffon's method tends to converge more slowly than the circle method due to its dependence on trigonometric functions and geometric constraints. The accuracy also depends heavily on having a large number of hits \\(H\\) , making small sample sizes unstable. Comparison of Methods Method Convergence Rate Complexity Suitable For Circle Monte Carlo \\(O(\\frac{1}{\\sqrt{N}})\\) Simple Geometry Quick Estimation Buffon\u2019s Needle Slower, probabilistic Trigonometry Historical curiosity, advanced problems","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2-estimating-using-monte-carlo-methods","text":"","title":"Problem 2: Estimating \u03c0 Using Monte Carlo Methods"},{"location":"1%20Physics/6%20Statistics/Problem_2/#motivation","text":"The number \u03c0 (pi) is a fundamental mathematical constant that represents the ratio of a circle\u2019s circumference to its diameter, approximately 3.1415926535\u2026 . Despite its apparent simplicity, \u03c0 cannot be expressed exactly as a fraction and has an infinite non-repeating decimal expansion. Estimating \u03c0 numerically is an excellent example of how randomness and probability can be used to solve deterministic problems. Monte Carlo methods are a family of computational algorithms that rely on repeated random sampling to obtain numerical results. These methods are widely used in fields such as physics , finance , AI , and engineering , especially when deterministic methods become too complex or infeasible. This problem uses two classical Monte Carlo approaches to estimate \u03c0: The Circle Method (Geometric probability) Buffon's Needle Experiment (Probabilistic geometry)","title":"Motivation"},{"location":"1%20Physics/6%20Statistics/Problem_2/#part-1-estimating-using-a-circle","text":"","title":"Part 1: Estimating \u03c0 Using a Circle"},{"location":"1%20Physics/6%20Statistics/Problem_2/#theoretical-foundation","text":"Imagine a unit circle (radius \\(r = 1\\) ) centered at the origin and inscribed in a square with side length 2. The area of the circle is: \\[ A_{\\text{circle}} = \\pi r^2 = \\pi \\] The area of the square is: \\[ A_{\\text{square}} = (2r)^2 = 4 \\] Therefore, the probability that a randomly chosen point inside the square also lies inside the circle is: \\[ P = \\frac{A_{\\text{circle}}}{A_{\\text{square}}} = \\frac{\\pi}{4} \\] Thus, if we generate N random points \\((x, y)\\) uniformly in the square \\([-1, 1] \\times [-1, 1]\\) and count how many of them fall inside the circle (i.e., satisfy \\(x^2 + y^2 \\leq 1\\) ), then: \\[ \\pi \\approx 4 \\cdot \\frac{N_{\\text{inside}}}{N} \\]","title":"Theoretical Foundation"},{"location":"1%20Physics/6%20Statistics/Problem_2/#numerical-results-example","text":"For N = 1,000 points \u2192 \u03c0 \u2248 3.14 For N = 10,000 points \u2192 \u03c0 \u2248 3.141 For N = 1,000,000 points \u2192 \u03c0 \u2248 3.14159 The accuracy improves with \\(\\sqrt{N}\\) convergence behavior \u2014 to get one more digit of accuracy, we need roughly 100\u00d7 more samples.","title":"Numerical Results Example"},{"location":"1%20Physics/6%20Statistics/Problem_2/#part-2-estimating-using-buffons-needle","text":"","title":"Part 2: Estimating \u03c0 Using Buffon\u2019s Needle"},{"location":"1%20Physics/6%20Statistics/Problem_2/#theoretical-foundation_1","text":"Buffon's Needle Problem is one of the earliest problems in geometric probability. Consider a floor with equally spaced parallel lines, d units apart. If we randomly drop a needle of length L \u2264 d , the probability that the needle crosses a line is given by: \\[ P = \\frac{2L}{\\pi d} \\] Solving for \u03c0: \\[ \\pi \\approx \\frac{2L \\cdot N}{d \\cdot H} \\] Where: \\(N\\) = total number of needle drops \\(H\\) = number of times the needle crosses a line For example, if we drop 10,000 needles of length 1 on lines spaced 2 units apart, and 6,366 cross a line, we estimate: \\[ \\pi \\approx \\frac{2 \\cdot 1 \\cdot 10,000}{2 \\cdot 6366} \\approx 3.1413 \\]","title":"Theoretical Foundation"},{"location":"1%20Physics/6%20Statistics/Problem_2/#statistical-behavior","text":"Buffon's method tends to converge more slowly than the circle method due to its dependence on trigonometric functions and geometric constraints. The accuracy also depends heavily on having a large number of hits \\(H\\) , making small sample sizes unstable.","title":"Statistical Behavior"},{"location":"1%20Physics/6%20Statistics/Problem_2/#comparison-of-methods","text":"Method Convergence Rate Complexity Suitable For Circle Monte Carlo \\(O(\\frac{1}{\\sqrt{N}})\\) Simple Geometry Quick Estimation Buffon\u2019s Needle Slower, probabilistic Trigonometry Historical curiosity, advanced problems","title":"Comparison of Methods"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1 Problem 1: Measuring Earth's Gravitational Acceleration with a Pendulum Motivation The gravitational acceleration \\(g\\) is approximately 9.80665 m/s\u00b2 at sea level. It governs the motion of objects under the influence of Earth's gravity and is essential in both theoretical and experimental physics. A simple and elegant method for measuring \\(g\\) is using the period of a simple pendulum , whose motion is governed by the relationship: \\[ T = 2\\pi \\sqrt{\\frac{L}{g}} \\] Where: \\(T\\) : Period of one full oscillation (in seconds) \\(L\\) : Length of the pendulum (in meters) \\(g\\) : Gravitational acceleration (in m/s\u00b2) By measuring the length of the pendulum and the period, we can solve for \\(g\\) . Task Perform a pendulum experiment to measure \\(g\\) and analyze the uncertainties involved in the length and timing measurements. This task emphasizes good experimental practices and error propagation. Procedure 1. Materials String of length \u2248 1.00 or 1.50 meters Small dense weight (e.g., metal washer, keychain, bag of coins) Stopwatch or smartphone timer (resolution \u00b10.01 s) Ruler or measuring tape (resolution \u00b10.01 m or \u00b10.005 m) 2. Setup Secure the string to a stable support (e.g., tripod, shelf). Measure the length \\(L\\) from the point of suspension to the center of mass of the weight. For example: $$ L = 1.000 \\text{ m}, \\quad \\delta L = \\pm 0.005 \\text{ m} $$ 3. Data Collection Displace the pendulum by a small angle (<15\u00b0 to ensure simple harmonic motion). Measure the time for 10 oscillations , denoted as \\(t_{10}\\) . Repeat this measurement 10 times , recording all values. Compute: Mean time for 10 oscillations: $$ \\overline{t_{10}} = \\frac{1}{10} \\sum_{i=1}^{10} t_{10,i} $$ * Standard deviation \\(\\sigma\\) * Uncertainty in mean: $$ \\delta \\overline{t_{10}} = \\frac{\\sigma}{\\sqrt{n}} $$ * Period: \\[ T = \\frac{\\overline{t_{10}}}{10} \\] Calculations 1. Determining Gravitational Acceleration: From: \\[ T = 2\\pi \\sqrt{\\frac{L}{g}} \\Rightarrow g = \\frac{4\\pi^2 L}{T^2} \\] For example, if: \\(L = 1.000 \\text{ m}\\) \\(\\overline{t_{10}} = 20.05 \\text{ s} \\Rightarrow T = 2.005 \\text{ s}\\) Then: \\[ g = \\frac{4\\pi^2 \\cdot 1.000}{(2.005)^2} \\approx 9.832 \\text{ m/s}^2 \\] 2. Propagation of Uncertainty Using: \\[ \\delta g = g \\cdot \\sqrt{\\left( \\frac{\\delta L}{L} \\right)^2 + \\left( 2 \\cdot \\frac{\\delta T}{T} \\right)^2} \\] If: \\(\\delta L = 0.005 \\text{ m}\\) , \\(L = 1.000 \\text{ m}\\) \\(\\delta T = 0.02 \\text{ s}\\) , \\(T = 2.005 \\text{ s}\\) Then: \\[ \\delta g \\approx 9.832 \\cdot \\sqrt{(0.005)^2 + \\left( 2 \\cdot \\frac{0.02}{2.005} \\right)^2} \\approx 0.12 \\text{ m/s}^2 \\] Final result: \\[ g = 9.83 \\pm 0.12 \\text{ m/s}^2 \\] Analysis 1. Comparison with Accepted Value: Experimental \\(g = 9.83 \\pm 0.12 \\text{ m/s}^2\\) Standard \\(g = 9.80665 \\text{ m/s}^2\\) The measured value is within experimental uncertainty , indicating good accuracy. 2. Uncertainty Sources: Length uncertainty ( \\(\\delta L\\) ) arises from reading error and string flexibility. Timing uncertainty ( \\(\\delta T\\) ) due to reaction time and stopwatch resolution. Assumes: No air resistance Small-angle approximation holds (valid for \u03b8 < 15\u00b0) Fixed pivot point, negligible damping","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1-measuring-earths-gravitational-acceleration-with-a-pendulum","text":"","title":"Problem 1: Measuring Earth's Gravitational Acceleration with a Pendulum"},{"location":"1%20Physics/7%20Measurements/Problem_1/#motivation","text":"The gravitational acceleration \\(g\\) is approximately 9.80665 m/s\u00b2 at sea level. It governs the motion of objects under the influence of Earth's gravity and is essential in both theoretical and experimental physics. A simple and elegant method for measuring \\(g\\) is using the period of a simple pendulum , whose motion is governed by the relationship: \\[ T = 2\\pi \\sqrt{\\frac{L}{g}} \\] Where: \\(T\\) : Period of one full oscillation (in seconds) \\(L\\) : Length of the pendulum (in meters) \\(g\\) : Gravitational acceleration (in m/s\u00b2) By measuring the length of the pendulum and the period, we can solve for \\(g\\) .","title":"Motivation"},{"location":"1%20Physics/7%20Measurements/Problem_1/#task","text":"Perform a pendulum experiment to measure \\(g\\) and analyze the uncertainties involved in the length and timing measurements. This task emphasizes good experimental practices and error propagation.","title":"Task"},{"location":"1%20Physics/7%20Measurements/Problem_1/#procedure","text":"","title":"Procedure"},{"location":"1%20Physics/7%20Measurements/Problem_1/#1-materials","text":"String of length \u2248 1.00 or 1.50 meters Small dense weight (e.g., metal washer, keychain, bag of coins) Stopwatch or smartphone timer (resolution \u00b10.01 s) Ruler or measuring tape (resolution \u00b10.01 m or \u00b10.005 m)","title":"1. Materials"},{"location":"1%20Physics/7%20Measurements/Problem_1/#2-setup","text":"Secure the string to a stable support (e.g., tripod, shelf). Measure the length \\(L\\) from the point of suspension to the center of mass of the weight. For example: $$ L = 1.000 \\text{ m}, \\quad \\delta L = \\pm 0.005 \\text{ m} $$","title":"2. Setup"},{"location":"1%20Physics/7%20Measurements/Problem_1/#3-data-collection","text":"Displace the pendulum by a small angle (<15\u00b0 to ensure simple harmonic motion). Measure the time for 10 oscillations , denoted as \\(t_{10}\\) . Repeat this measurement 10 times , recording all values. Compute: Mean time for 10 oscillations: $$ \\overline{t_{10}} = \\frac{1}{10} \\sum_{i=1}^{10} t_{10,i} $$ * Standard deviation \\(\\sigma\\) * Uncertainty in mean: $$ \\delta \\overline{t_{10}} = \\frac{\\sigma}{\\sqrt{n}} $$ * Period: \\[ T = \\frac{\\overline{t_{10}}}{10} \\]","title":"3. Data Collection"},{"location":"1%20Physics/7%20Measurements/Problem_1/#calculations","text":"","title":"Calculations"},{"location":"1%20Physics/7%20Measurements/Problem_1/#1-determining-gravitational-acceleration","text":"From: \\[ T = 2\\pi \\sqrt{\\frac{L}{g}} \\Rightarrow g = \\frac{4\\pi^2 L}{T^2} \\] For example, if: \\(L = 1.000 \\text{ m}\\) \\(\\overline{t_{10}} = 20.05 \\text{ s} \\Rightarrow T = 2.005 \\text{ s}\\) Then: \\[ g = \\frac{4\\pi^2 \\cdot 1.000}{(2.005)^2} \\approx 9.832 \\text{ m/s}^2 \\]","title":"1. Determining Gravitational Acceleration:"},{"location":"1%20Physics/7%20Measurements/Problem_1/#2-propagation-of-uncertainty","text":"Using: \\[ \\delta g = g \\cdot \\sqrt{\\left( \\frac{\\delta L}{L} \\right)^2 + \\left( 2 \\cdot \\frac{\\delta T}{T} \\right)^2} \\] If: \\(\\delta L = 0.005 \\text{ m}\\) , \\(L = 1.000 \\text{ m}\\) \\(\\delta T = 0.02 \\text{ s}\\) , \\(T = 2.005 \\text{ s}\\) Then: \\[ \\delta g \\approx 9.832 \\cdot \\sqrt{(0.005)^2 + \\left( 2 \\cdot \\frac{0.02}{2.005} \\right)^2} \\approx 0.12 \\text{ m/s}^2 \\] Final result: \\[ g = 9.83 \\pm 0.12 \\text{ m/s}^2 \\]","title":"2. Propagation of Uncertainty"},{"location":"1%20Physics/7%20Measurements/Problem_1/#analysis","text":"","title":"Analysis"},{"location":"1%20Physics/7%20Measurements/Problem_1/#1-comparison-with-accepted-value","text":"Experimental \\(g = 9.83 \\pm 0.12 \\text{ m/s}^2\\) Standard \\(g = 9.80665 \\text{ m/s}^2\\) The measured value is within experimental uncertainty , indicating good accuracy.","title":"1. Comparison with Accepted Value:"},{"location":"1%20Physics/7%20Measurements/Problem_1/#2-uncertainty-sources","text":"Length uncertainty ( \\(\\delta L\\) ) arises from reading error and string flexibility. Timing uncertainty ( \\(\\delta T\\) ) due to reaction time and stopwatch resolution. Assumes: No air resistance Small-angle approximation holds (valid for \u03b8 < 15\u00b0) Fixed pivot point, negligible damping","title":"2. Uncertainty Sources:"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}